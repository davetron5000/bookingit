= bookinggit

Describe your project here

:include:bookinggit.rdoc

# BOOKINGIT

A basic publishing system that takes Mardown and a Git repository and produces a readable "book" in the following forms:

* Website
* PDF
* EBook

The idea is to easily show the evolution of code over the course of the book, based entirely on git diffs and pull requests.

## Example

```
Here is how our controller looks currently:

    git:///app/controlleres/users_controller.rb#initial-version

We'd like to change the mailer call to use Resque

    git-diff:///app/controllers/users_controller.rb#add-resque-to-controller
```

This bit of Markdown could then be translated into Git-Hub Flavored Markdown like so:

    Here is how our controller looks currently:

    ```ruby
    class UsersController < ApplicationController::Base
      def create
        @user = User.new(params.require(:user))
        if @user.save
          UserMailer.welcome_email(user).deliver
          redirect_to root_path
        else
          render 'new'
        end
      end
    end
    ```

    We'd like to change the mailer call to use Resque

    ```diff
    --- a/app/controllers/users_controller.rb
    +++ b/app/controllers/users_controller.rb
      def create
        @user = User.new(params.require(:user))
        if @user.save
    -     UserMailer.welcome_email(user).deliver
    +     Resque.enqueue(WelcomeEmailJob,user.id)
          redirect_to root_path
        else
    ```

This could then feed into other engines to generate text.

Finally, we'd also want to be able to show terminal output, so that we can easily generate whatever the output would be on the code in question.  This
means that Markdown like so:

    Now, let's run our tests

    sh://rake test

When we generate the output, would actually run the tests and replace that with the invocation and output, like so:


    Now, let's run our tests.

    ```bash
    > rake test
    ...........................

    Finished in 0.00946 seconds
    27 examples, 0 failures

    Randomized with seed 43200
    ```


## Next Steps

1. Markdown-to-Markdown to insert a referenced file
1. Markdown-to-Markdown to insert a referenced file from a specific git repo and SHA1
1. Markdown-to-Markdown to insert a diff
1. Markdown-to-Markdown to insert output of a shell command

Once these four steps are done, we can think about the larger structure and how that affects the output
